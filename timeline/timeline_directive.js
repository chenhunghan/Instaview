// Generated by CoffeeScript 1.6.3
(function() {
  var FlowChartController;

  angular.module("timeline", []).directive("timeline", [
    '$timeout', function($timeout) {
      return {
        restrict: "E",
        template: "<div></div>",
        replace: true,
        scope: {
          chart: "=chart"
        },
        link: function(scope, ele, attr, ctrl) {
          var data, onselect, options, timeline;
          onselect = function() {
            if (timeline.getSelection().length !== 0) {
              return console.log(data[timeline.getSelection()[0].row]);
            }
          };
          timeline = new links.Timeline(ele[0]);
          links.events.addListener(timeline, 'select', onselect);
          options = {
            width: "90%",
            height: "35%",
            zoomMax: 315360000000 * 0.25,
            zoomMin: 10000 * 60,
            cluster: true,
            eventMargin: 5,
            eventMarginAxis: 10
          };
          timeline.setOptions(options);
          data = [];
          data.push({
            start: new Date(2014, 5, 27),
            content: "Event A"
          });
          data.push({
            start: new Date(2014, 5, 24),
            content: "Event B"
          });
          data.push({
            start: new Date(2014, 5, 22),
            content: "Event C"
          });
          data.push({
            start: new Date(2014, 5, 21),
            content: "Event D"
          });
          timeline.draw(data);
          return $timeout((function() {
            scope.chart.data.nodes = scope.chart.data.nodes.splice(0, 10);
            return scope.chart.updateNodeQuantity();
          }), 1000);
        }
      };
    }
  ]).controller("timelineController", [
    "$scope", "$element", "$timeout", "$window", FlowChartController = function($scope, $element, $timeout, $window) {
      var endDay, endHour, endMin, endMonth, endSec, endYear, startDay, startHour, startMin, startMonth, startSec, startYear, time;
      time = new $window.Date();
      Number.prototype.pad = function(size) {
        var s;
        s = String(this);
        if (typeof size !== "number") {
          size = 2;
        }
        while (s.length < size) {
          s = "0" + s;
        }
        return s;
      };
      $scope.startDate = "" + (time.getFullYear()) + "-" + (time.getMonth().pad()) + "-" + (time.getDate().pad());
      $scope.startTime = "" + (time.getHours() - 2) + ":" + (time.getMinutes().pad()) + ":" + (time.getSeconds().pad());
      $scope.endDate = "" + (time.getFullYear()) + "-" + (time.getMonth().pad()) + "-" + (time.getDate().pad());
      $scope.endTime = "" + (time.getHours()) + ":" + (time.getMinutes().pad()) + ":" + (time.getSeconds().pad());
      startYear = parseInt($scope.startDate.split('-')[0]);
      startMonth = parseInt($scope.startDate.split('-')[1]);
      startDay = parseInt($scope.startDate.split('-')[2]);
      startHour = parseInt($scope.startTime.split(':')[0]);
      startMin = parseInt($scope.startTime.split(':')[1]);
      startSec = parseInt($scope.startTime.split(':')[2]);
      endYear = parseInt($scope.endDate.split('-')[0]);
      endMonth = parseInt($scope.endDate.split('-')[1]);
      endDay = parseInt($scope.endDate.split('-')[2]);
      endHour = parseInt($scope.endTime.split(':')[0]);
      endMin = parseInt($scope.endTime.split(':')[1]);
      endSec = parseInt($scope.endTime.split(':')[2]);
    }
  ]);

}).call(this);

/*
//@ sourceMappingURL=timeline_directive.map
*/
